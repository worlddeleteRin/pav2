webpackHotUpdate("app",{

/***/ "./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader-v16/dist/index.js?!./src/components/DesktopHeader.vue?vue&type=script&lang=js":
/*!****************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/cache-loader/dist/cjs.js??ref--12-0!./node_modules/babel-loader/lib!./node_modules/cache-loader/dist/cjs.js??ref--0-0!./node_modules/vue-loader-v16/dist??ref--0-1!./src/components/DesktopHeader.vue?vue&type=script&lang=js ***!
  \****************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _headlessui_vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @headlessui/vue */ \"./node_modules/@headlessui/vue/dist/headlessui.esm.js\");\n/* harmony import */ var _heroicons_vue_outline__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @heroicons/vue/outline */ \"./node_modules/@heroicons/vue/outline/esm/index.js\");\n/* harmony import */ var _heroicons_vue_solid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @heroicons/vue/solid */ \"./node_modules/@heroicons/vue/solid/esm/index.js\");\n\n\n\nvar callsToAction = [{\n  name: 'Watch Demo',\n  href: '#',\n  icon: _heroicons_vue_solid__WEBPACK_IMPORTED_MODULE_2__[\"ChevronDownIcon\"]\n}, {\n  name: 'Contact Sales',\n  href: '#',\n  icon: _heroicons_vue_outline__WEBPACK_IMPORTED_MODULE_1__[\"ChevronDoubleRightIcon\"]\n}];\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  components: {\n    Popover: _headlessui_vue__WEBPACK_IMPORTED_MODULE_0__[\"Popover\"],\n    PopoverButton: _headlessui_vue__WEBPACK_IMPORTED_MODULE_0__[\"PopoverButton\"],\n    PopoverGroup: _headlessui_vue__WEBPACK_IMPORTED_MODULE_0__[\"PopoverGroup\"],\n    PopoverPanel: _headlessui_vue__WEBPACK_IMPORTED_MODULE_0__[\"PopoverPanel\"],\n    ChevronDownIcon: _heroicons_vue_solid__WEBPACK_IMPORTED_MODULE_2__[\"ChevronDownIcon\"],\n    ChevronDoubleRightIcon: _heroicons_vue_outline__WEBPACK_IMPORTED_MODULE_1__[\"ChevronDoubleRightIcon\"]\n  },\n  setup: function setup() {\n    return {\n      callsToAction: callsToAction\n    };\n  },\n  data: function data() {\n    return {\n      category_icon: 'ChevronDoubleRightIcon'\n    };\n  },\n  computed: {\n    categories: function categories() {\n      return this.$store.state.ecommerce.categories;\n    }\n  },\n  methods: {\n    openCallPhoneDialog: function openCallPhoneDialog() {\n      console.log('clicked to open');\n      this.$store.commit('openCallPhoneDialog');\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/cache-loader/dist/cjs.js?!./node_modules/babel-loader/lib/index.js!./node_modules/cache-loader/dist/cjs.js?!./node_modules/vue-loader-v16/dist/index.js?!./src/components/DesktopHeader.vue?vue&type=script&lang=js\n");

/***/ })

})